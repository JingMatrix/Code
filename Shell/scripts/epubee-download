#! zsh
# If provide hash from reader.epubee.com, then download that e-book, otherwise parse a given file

tidy_config=$(dirname $0)/../../Web/tidy.config

function htmlparser {
	readerhtml="=['\"]\/books\/mobile\/|^<meta |<\/div><\/div><\/div>"
	readercontainer='^<div class="readercontent"><div class="readercontent-inner">'
	if grep -q $readercontainer $1; then
		sed <$1 -n -E "/$readerhtml/d;1,/<\/head>/p;/$readercontainer/,\$p" |
			sed -E "s#$readercontainer#<body><div>#;s#^</body>#</div></body>#" |
			fixepub
	else
		echo >&2 "No epubee reader fingerprint found"
		fixepub <$1
	fi
}

function fixepub {
	if [[ -f $tidy_config ]]; then
		tidy -config $tidy_config -o |
			sed '3s#""#"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"#'
		# fix doctype
	else
		echo $tidy_config not exists
	fi
}

function parsefile {
	cd $rootdir-bak
	for html in OEBPS/**html; do
		htmlparser $rootdir-bak/$html >$rootdir/$html
	done
	if [[ -f OEBPS/toc.ncx ]]; then
		sed -i '/ content="bookid"/d' $rootdir/OEBPS/toc.ncx
	fi
}

epubhash=$(grep -oP '[0-9a-f]{32}' <<<$1)
if [[ -z $epubhash ]]; then
	# parse given file in argument
	echo parse html file $1
	htmlparser $1
	exit
else
	# download files from epubee.com
	rootdir=/tmp/epub/$epubhash
	if [[ -d $rootdir-bak ]]; then
		echo -n "Use cached download files, parser them again?\t"
		if read -q; then
			parsefile
		fi
	else
		mkdir -p $rootdir/
		mkdir -p $rootdir/OEBPS
		mkdir -p $rootdir/META-INF
		cd $rootdir/
		echo -n 'application/epub+zip' >mimetype
		echo -n '<?xml version="1.0" encoding="UTF-8" ?>
<container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container">
  <rootfiles>
    <rootfile full-path="OEBPS/content.opf" media-type="application/oebps-package+xml"/>
  </rootfiles>
</container>' >META-INF/container.xml
		cd $rootdir/OEBPS
		root=http://reader.epubee.com/books/mobile/$epubhash[0,2]/$epubhash
		aria2c $root/content.opf
		grep -oP 'item href="\K[^"]+' content.opf | while read -r file; do
			dir=$(dirname $file)
			[[ -d $dir ]] || mkdir -p $dir
			aria2c $root/$file -d $dir
		done
		cp $rootdir $rootdir-bak -r
	fi
fi

# parse htmls only if haven't
[[ ! -f $rootdir.json ]] && parsefile

# pack epub file and start edit if not well format
epubcheck $rootdir --mode exp --save --json $rootdir.json
# filename="/tmp/$(grep -oP '<dc:title>\K[^<]+' $rootdir/OEBPS/content.opf).epub"
filename="/tmp/$(jq '.publication | .title' $rootdir.json -r).epub"
jq '.messages | .[] | .message' $rootdir.json -r
jq '.messages | .[] | .message, (.locations | .[] | [.path, .line, .column] | @tsv)' $rootdir.json -r >$rootdir.error

if [[ -f $rootdir.epub ]]; then
	mv $rootdir.epub $filename
else
	echo -n "Edit with vim?\t"
	read -q && tmux split-window -b "vim $(jq '.messages | .[] | .locations | .[] |"'$rootdir'/\(.path)"' $rootdir.json -r | uniq | tr "\n" " ")" && less $rootdir.error
	echo -n "\nChange to html directory?\t"
	read -q && cd $rootdir/OEBPS && $SHELL
	echo -n "\nThen edit with sigil?\t"
	read -q && cd $rootdir && zip -rX $filename * && (sigil $filename &) && less $rootdir.error
fi
