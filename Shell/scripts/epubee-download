#! zsh
hash=$(grep -oP '[0-9a-f]{32}' <<<$1)
[[ $hash ]] || exit
rootdir=/tmp/epub/$hash

function parseHtml {
	tmp=$(mktemp /tmp/epubHTML.XXXXXX)
	cp $1 $tmp
	head -n1 $tmp | grep -q '^<?xml' || echo '<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">' >$1
	sed -E '1d;/<\/head>/q;/javascript|webreader3.css|^<meta/d' $tmp >>$1
	echo "<body>" >>$1
	pup 'div.readercontent-inner' <$tmp | sed '1d;$d' >>$1
	echo "</body>" >>$1
	rm $tmp
	prettier -w $1
}

if [[ -d $rootdir && -f $rootdir/mimetype ]]; then
	echo Use cached files
else
	mkdir -p $rootdir/
	mkdir -p $rootdir/OEBPS
	mkdir -p $rootdir/META-INF
	cd $rootdir/
	echo -n 'application/epub+zip' >mimetype
	echo -n '<?xml version="1.0" encoding="UTF-8" ?>
<container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container">
  <rootfiles>
    <rootfile full-path="OEBPS/content.opf" media-type="application/oebps-package+xml"/>
  </rootfiles>
</container>' >META-INF/container.xml
	cd $rootdir/OEBPS
	root=http://reader.epubee.com/books/mobile/$hash[0,2]/$hash
	aria2c $root/content.opf
	grep -oP 'item href="\K[^"]+' content.opf | while read -r file; do
		aria2c $root/$file
	done
	for html in $rootdir/OEBPS/**html; do
		parseHtml $html
	done
fi

# pack epub file and start edit if not well format
filename="/tmp/$(grep -oP '<dc:title>\K[^<]+' $rootdir/OEBPS/content.opf).epub"
[[ -f $rootdir.epub ]] && rm $rootdir.epub
epubcheck $rootdir --mode exp --save --json $rootdir.json
error=$(jq '.messages | .[] |(.locations | .[] | ["'$rootdir'/\(.path)", "  column: \(.column)", "line: \(.line)"] | @tsv), .message, "\n"' $rootdir.json -r)
if [[ -f $rootdir.epub ]]; then
	mv $rootdir.epub $filename
else
	echo -n "Edit with vim?\t"
	read -q && <<<$error && tmux split-window -bh "vim $(jq '.messages | .[] | .locations | .[] |"'$rootdir'/\(.path)"' $rootdir.json -r | uniq | tr "\n" " ")"
	echo -n "\nThen edit with sigil?\t"
	read -q && <<<$error && zip -rX $filename $rootdir/* && sigil $filename

fi
